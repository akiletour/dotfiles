# Some general settings

# open terminal
cmd - return : /Applications/kitty.app/Contents/MacOS/kitty --single-instance -d ~

# Restart Yabai
ctrl + alt - r : launchctl kickstart -k "gui/${UID}/homebrew.mxcl.yabai"

# Yabai Settings 
# focus window
hyper - j : yabai -m window --focus prev
hyper - k : yabai -m window --focus next

# Rotate Window Tree (hyper+space)
hyper - 0x31 : yabai -m space --rotate 90

# fast focus desktop
hyper - x : yabai -m space --focus recent
hyper - a : yabai -m space --focus prev
hyper - d : yabai -m space --focus next

# send window to desktop and follow focus
hyper - h : yabai -m window --space  prev; yabai -m space --focus prev
hyper - l : yabai -m window --space next; yabai -m space --focus next

# focus monitor using left and right arrow keys, respectively
hyper - 0x12 : yabai -m display --focus prev
hyper - 0x13 : yabai -m display --focus next

# send window to monitor and follow focus
hyper - right : yabai -m window --display prev; yabai -m display --focus prev
hyper - left : yabai -m window --display next; yabai -m display --focus next

# toggle window split type
hyper - e : yabai -m window --toggle split

# float / unfloat window and center on screen
hyper - t : yabai -m window --toggle float;\
          yabai -m window --grid 4:4:1:1:2:2

# Resize the window to a set size
hyper - return : yabai -m window --resize abs:1000:600

# Center a floating window
hyper - c : yabai -m window --grid 4:4:1:1:2:2

# Switch to floating without turning off borders
hyper - w: yabai -m config layout float

# Switch to floating systemwide and disable borders
hyper - f: yabai -m window --toggle zoom-fullscreen
# Switch back to bsp and turn on window borders again
hyper - b: yabai -m config layout bsp; yabai -m config window_border on

#### Some settings I don't use but might need later ####

# toggle sticky(+float), topmost, picture-in-picture
# hyper - p : yabai -m window --toggle sticky;\
#             yabai -m window --toggle topmost;\
#             yabai -m window --toggle pip

# swap managed window
# shift + alt - h : yabai -m window --swap north

# move managed window
# shift + cmd - h : yabai -m window --warp east

# balance size of windows
# shift + alt - 0 : yabai -m space --balance

# make floating window fill screen
#shift + alt - up     : yabai -m window --grid 1:1:0:0:1:1

# make floating window fill left-half of screen
# shift + alt - left   : yabai -m window --grid 1:2:0:0:1:1

# create desktop, move window and follow focus - uses jq for parsing json (brew install jq)
# shift + cmd - n : yabai -m space --create && \
#                   index="$(yabai -m query --spaces --display | jq 'map(select(."native-fullscreen" == 0))[-1].index')" && \
#                   yabai -m window --space "${index}" && \
#                   yabai -m space --focus "${index}"

# move floating window
# shift + ctrl - a : yabai -m window --move rel:-20:0
# shift + ctrl - s : yabai -m window --move rel:0:20

# increase window size
# shift + alt - a : yabai -m window --resize left:-20:0
# shift + alt - w : yabai -m window --resize top:0:-20

# decrease window size
# shift + cmd - s : yabai -m window --resize bottom:0:-20
# shift + cmd - w : yabai -m window --resize top:0:20

# grow window by 100 to the right, shrink by 200 at the bottom
#   (options: top, left, bottom, right, top_left, top_right, bottom_right, bottom_left)
# hyper - 0x3d : yabai -m window --resize top-left:100:-200

# set insertion point in focused container
# ctrl + alt - h : yabai -m window --insert west

# toggle window zoom
# alt - d : yabai -m window --toggle zoom-parent
# alt - f : yabai -m window --toggle zoom-fullscreen
# Random settings from Example Config
# open qutebrowser
# cmd + shift - return : ~/Scripts/qtb.sh

# open mpv
# cmd - m : open -na /Applications/mpv.app $(pbpaste)


#### General Guidelines for skhdrc ####

#  NOTE(koekeishiya): A list of all built-in modifier and literal keywords can
#                     be found at https://github.com/koekeishiya/skhd/issues/1
#
#                     A hotkey is written according to the following rules:
#
#                       hotkey       = <mode> '<' <action> | <action>
#
#                       mode         = 'name of mode' | <mode> ',' <mode>
#
#                       action       = <keysym> '[' <proc_map_lst> ']' | <keysym> '->' '[' <proc_map_lst> ']'
#                                      <keysym> ':' <command>          | <keysym> '->' ':' <command>
#                                      <keysym> ';' <mode>             | <keysym> '->' ';' <mode>
#
#                       keysym       = <mod> '-' <key> | <key>
#
#                       mod          = 'modifier keyword' | <mod> '+' <mod>
#
#                       key          = <literal> | <keycode>
#
#                       literal      = 'single letter or built-in keyword'
#
#                       keycode      = 'apple keyboard kVK_<Key> values (0x3C)'
#
#                       proc_map_lst = * <proc_map>
#
#                       proc_map     = <string> ':' <command> | <string>     '~' |
#                                      '*'      ':' <command> | '*'          '~'
#
#                       string       = '"' 'sequence of characters' '"'
#
#                       command      = command is executed through '$SHELL -c' and
#                                      follows valid shell syntax. if the $SHELL environment
#                                      variable is not set, it will default to '/bin/bash'.
#                                      when bash is used, the ';' delimeter can be specified
#                                      to chain commands.
#
#                                      to allow a command to extend into multiple lines,
#                                      prepend '\' at the end of the previous line.
#
#                                      an EOL character signifies the end of the bind.
#
#                       ->           = keypress is not consumed by skhd
#
#                       *            = matches every application not specified in <proc_map_lst>
#
#                       ~            = application is unbound and keypress is forwarded per usual, when specified in a <proc_map>
#
#  NOTE(koekeishiya): A mode is declared according to the following rules:
#
#                       mode_decl = '::' <name> '@' ':' <command> | '::' <name> ':' <command> |
#                                   '::' <name> '@'               | '::' <name>
#
#                       name      = desired name for this mode,
#
#                       @         = capture keypresses regardless of being bound to an action
#
#                       command   = command is executed through '$SHELL -c' and
#                                   follows valid shell syntax. if the $SHELL environment
#                                   variable is not set, it will default to '/bin/bash'.
#                                   when bash is used, the ';' delimeter can be specified
#                                   to chain commands.
#
#                                   to allow a command to extend into multiple lines,
#                                   prepend '\' at the end of the previous line.
#
#                                   an EOL character signifies the end of the bind.

# add an on_enter command to the default mode
# :: default : chunkc border::color 0xff775759
#
# defines a new mode 'test' with an on_enter command, that captures keypresses
# :: test @ : chunkc border::color 0xff24ccaa
#
# from 'default' mode, activate mode 'test'
# cmd - x ; test
#
# from 'test' mode, activate mode 'default'
# test < cmd - x ; default
#
# launch a new terminal instance when in either 'default' or 'test' mode
# default, test < cmd - return : open -na /Applications/Terminal.app

# application specific bindings
#
# cmd - n [
#     "kitty"       : echo "hello kitty"
#     *             : echo "hello everyone"
#     "qutebrowser" : echo "hello qutebrowser"
#     "terminal"    ~
#     "finder"      : false
# ]

# specify a file that should be included as an additional config-file.
# treated as an absolutepath if the filename begins with '/' otherwise
# the file is relative to the path of the config-file it was loaded from.
#
# .load "/Users/Koe/.config/partial_skhdrc"
# .load "partial_skhdrc"

# prevent skhd from monitoring events for specific applications.
#
# .blacklist [
#    "kitty"
#    "terminal"
#    "qutebrowser"
# ]
